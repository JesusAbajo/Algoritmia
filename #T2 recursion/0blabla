RECURSION 

Cuado una funcion se llama a si misma

167 cuadrados fractales
    

    --REVISAR TIPOS DE RECURSION Y DIFERENCIAS--


para definir la complejidad necesitamos:
    a = numero de llamadas recursivas x iteracion de la funciÃ³n
    b = manera en la que "mengua" factor de reduccion
    k = coste general, todo lo que no es la recursion
    => el coste del algoritmo es O(cosa)

--FORMULAS--
  T(n) = a * T(n/b) + c*n^k

  3 casos:
    a < b^k     =>  O(n^k)
    a = b^k     =>  O(n^k * log(n))
    a > b^k     =>  O(n^log_b a)            log_b a == logaritmo en base b de a

complejidad del polidivisible => tiene a=1, b=10, k=0 ; segundo caso => O(log(n)) respecto al numero que me dan
                                                      ; O(n) respecto al numero de digitos


--PROBLEMA POSIBLE PARA EL EXAMEN-- => DIFICIL :(

    



